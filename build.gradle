buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:latest.integration"
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.jetbrains.dokka'

mainClassName = 'com.reroute.ScratchRunner'

jar {
    baseName = 'donutserver'
    version = '0.0.1'
    manifest {
        attributes 'Main-Class' : 'com.reroute.ScratchRunner'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:19.0'
    compile 'se.walkercrou:google-places-api-java:2.1.2'
    compile 'org.apache.httpcomponents:httpcore:4.4.1'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile group: 'org.onebusaway', name: 'onebusaway-gtfs', version: '1.3.4'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.moodysalem:LatLongToTimezoneMaven:1.1'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.0.0'
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile group: 'redis.clients', name: 'jedis', version: '2.8.2'
    compile "com.sparkjava:spark-core:2.6.0" // add to build.gradle (for Java users)
    compile fileTree(include: ['*.jar'], dir: 'lib')

    testCompile 'junit:junit:4.12'

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.2'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

build.dependsOn buildZip
build.dependsOn shadowJar
task depsize  {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        conf.sort { it.length() }
            .each {
                out << "${it.name}".padRight(45)
                out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
            }
        out << '\n'
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        println(out)
    }
}
dokka {
    outputFormat = 'markdown'
    outputDirectory = "$buildDir/javadoc"
    sourceDirs = files('src/main/java')
    //TODO: Either move to Kotlin or output a more Java-like documentation
}
